<!DOCTYPE html>
<html>

<head>
  <meta charset="UTF-8" />
  <title>Front End Development / React</title>
</head>

<body>
  <!-- We will put our React component inside this div. -->
  <div id="root"></div>

  <!-- Load React & Babel -->
  <!-- Note: when deploying, replace "development.js" with "production.min.js". -->
  <script src="https://unpkg.com/react@18/umd/react.development.js" crossorigin></script>
  <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js" crossorigin></script>
  <script src="https://unpkg.com/babel-standalone@6.26.0/babel.min.js"></script>

  <!-- Load our React component. -->
  <script type="text/babel">
   
   function Repo() {
  const [listItems, setListItems] = React.useState([]);
  const [search, setSearch] = React.useState(null);
  
function inputChanged(event) {
    setSearch(event.target.value);
}

function fetchRepo(event) {
    event.preventDefault();
    fetch(`https://api.github.com/search/repositories?q=${search}`)
      .then(response => response.json())
      .then(responseData => {
        setListItems(responseData.items);
      })
      .catch(err => console.error(err));
}

  return (
    <div>
        <form onSubmit={fetchRepo}>
            <input type="text"  onChange={inputChanged} value={search}/>
            <button>Search</button>
        </form>
      <h2>Repositories</h2>
      <table>
        <tbody>
          <tr>
            <th>Name</th>
            <th>URL</th>
          </tr>
          {listItems.map((repo) =>
            <tr key={repo.id}>
              <td>{repo.full_name}</td>
              <td><a href={repo.svn_url}>{repo.svn_url}</a></td>
            </tr>
          )}
        </tbody>
      </table>
    </div>
  );
}

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(<Repo />);
