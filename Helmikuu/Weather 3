<!DOCTYPE html>
<html>

<head>
  <meta charset="UTF-8" />
  <title>Front End Development / React</title>
</head>

<body>
  <!-- We will put our React component inside this div. -->
  <div id="root"></div>

  <!-- Load React & Babel -->
  <!-- Note: when deploying, replace "development.js" with "production.min.js". -->
  <script src="https://unpkg.com/react@18/umd/react.development.js" crossorigin></script>
  <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js" crossorigin></script>
  <script src="https://unpkg.com/babel-standalone@6.26.0/babel.min.js"></script>

  <!-- Load our React component. -->
  <script type="text/babel">
   
   function Weather() {
    const { useState } = React;
    const [city, setCity] = useState('Helsinki');
    const [weather, setWeather] = useState(null);

    React.useEffect(() => {
        fetch(
            `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=8a72e5ba72a7e5127b19bc30c3d787c4`
        )
            .then((response) => response.json())
            .then((data) =>
                setWeather({
                    city: city,
                    temperature: Number(data.main.temp - 273.15),
                    weather: data.weather[0].main,
                    iconUrl: `http://openweathermap.org/img/w/${data.weather[0].icon}.png`,
                })
            );
    }, []);

    return (
        <div>
            {weather && (
                <div>
                    <h1>{weather.city}</h1>
                    <p>Temperature: {weather.temperature.toFixed(1)} Â°C</p>
                    <img src={weather.iconUrl} />
                </div>
            )}
        </div>
    );
}

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(<Weather />);
